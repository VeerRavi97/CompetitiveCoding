
https://www.geeksforgeeks.org/meet-in-the-middle/

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<ll> vi;
#define all(c) c.begin(),c.end()
#define MAXN 40
#define MINF -0x3f3f3f3f
#define INF 0x3f3f3f3f
vi x,y,v;
vector<ll> gensubset(ll start,ll last)
{
    vector<ll>temp;
    ll n=last-start+1;
    cout << "subsets " << " ";
    for(ll i=0;i<(1<<n);i++)
    {
        ll sum=0;
        for(ll k=0;k<n;k++)
        {

            if(i&(1<<k))
            {
                sum+=v[start+k];
             cout << v[start+k] << " ";
            }


        }
      temp.push_back(sum);
        cout << "\n";

    }
    return temp;

}
ll solve( ll sum)
{
    ll ans=MINF;
    ll pos;
    sort(all(y));

    for( ll i=0;i<x.size();i++)
    {
        if(x[i]<=sum)
         {
             pos=lower_bound(all(y),sum-x[i])-y.begin();
         cout << " pos " << pos ;
        if(y[pos]!=sum-x[i] || pos==y.size()) // if pos not found within y or y[pos]!=sum-x[i]
            pos--;

        if(y[pos]+x[i]>ans)
            ans=y[pos]+x[i];
         }


    }


return ans;






}
int main()
{
    ios :: sync_with_stdio(0);
    cin.tie(0);

    ll n,sum;
    cin >> n;

    for(ll i=0;i<n;i++)
    {
       ll in;
       cin >> in;
       v.push_back(in);
    }
    cin >> sum;

    x=gensubset(0,(n-1)/2);

    cout << "x is " << " ";
    for(ll i=0;i<x.size();i++)
        cout << x[i] << " ";
    cout << "\n";
   y=gensubset((n-1)/2+1,n-1);
    ll ans=solve(sum);
      cout << "y is" << " ";
    for(ll i=0;i<y.size();i++)
        cout << y[i] << " ";
    cout << "\n";


cout << "ans " << ans;


}
